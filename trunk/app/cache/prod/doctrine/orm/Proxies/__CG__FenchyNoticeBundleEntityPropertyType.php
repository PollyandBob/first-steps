<?php

namespace Proxies\__CG__\Fenchy\NoticeBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class PropertyType extends \Fenchy\NoticeBundle\Entity\PropertyType implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getElement()
    {
        $this->__load();
        return parent::getElement();
    }

    public function setElement($element)
    {
        $this->__load();
        return parent::setElement($element);
    }

    public function getOptions($unserialized = true)
    {
        $this->__load();
        return parent::getOptions($unserialized);
    }

    public function setOptions($options)
    {
        $this->__load();
        return parent::setOptions($options);
    }

    public function getElementName($element = NULL)
    {
        $this->__load();
        return parent::getElementName($element);
    }

    public function getExpanded()
    {
        $this->__load();
        return parent::getExpanded();
    }

    public function setExpanded($exp)
    {
        $this->__load();
        return parent::setExpanded($exp);
    }

    public function getMultiple()
    {
        $this->__load();
        return parent::getMultiple();
    }

    public function setMultiple($multi)
    {
        $this->__load();
        return parent::setMultiple($multi);
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function setTypes(\Doctrine\Common\Collections\ArrayCollection $types)
    {
        $this->__load();
        return parent::setTypes($types);
    }

    public function addType(\Fenchy\NoticeBundle\Entity\Type $type)
    {
        $this->__load();
        return parent::addType($type);
    }

    public function removeType(\Fenchy\NoticeBundle\Entity\Type $type)
    {
        $this->__load();
        return parent::removeType($type);
    }

    public function getValues()
    {
        $this->__load();
        return parent::getValues();
    }

    public function setValues(\Doctrine\Common\Collections\ArrayCollection $values)
    {
        $this->__load();
        return parent::setValues($values);
    }

    public function addValue(\Fenchy\NoticeBundle\Entity\Value $value)
    {
        $this->__load();
        return parent::addValue($value);
    }

    public function removeValue(\Fenchy\NoticeBundle\Entity\Value $value)
    {
        $this->__load();
        return parent::removeValue($value);
    }

    public function isElementValid(\Symfony\Component\Validator\ExecutionContext $context)
    {
        $this->__load();
        return parent::isElementValid($context);
    }

    public function isValueValid($val)
    {
        $this->__load();
        return parent::isValueValid($val);
    }

    public function getOptionName($key)
    {
        $this->__load();
        return parent::getOptionName($key);
    }

    public function getOptionValueByName($name)
    {
        $this->__load();
        return parent::getOptionValueByName($name);
    }

    public function getTypes()
    {
        $this->__load();
        return parent::getTypes();
    }

    public function isSelectable()
    {
        $this->__load();
        return parent::isSelectable();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'element', 'options', 'expanded', 'multiple', 'types', 'values');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}