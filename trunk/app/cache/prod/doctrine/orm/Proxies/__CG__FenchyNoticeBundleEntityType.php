<?php

namespace Proxies\__CG__\Fenchy\NoticeBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Type extends \Fenchy\NoticeBundle\Entity\Type implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getParent()
    {
        $this->__load();
        return parent::getParent();
    }

    public function setParent(\Fenchy\NoticeBundle\Entity\Type $parent)
    {
        $this->__load();
        return parent::setParent($parent);
    }

    public function getChildren()
    {
        $this->__load();
        return parent::getChildren();
    }

    public function setChildren(\Doctrine\Common\Collections\ArrayCollection $children)
    {
        $this->__load();
        return parent::setChildren($children);
    }

    public function addChild(\Fenchy\NoticeBundle\Entity\Type $type)
    {
        $this->__load();
        return parent::addChild($type);
    }

    public function removeChild(\Fenchy\NoticeBundle\Entity\Type $type)
    {
        $this->__load();
        return parent::removeChild($type);
    }

    public function getProperties()
    {
        $this->__load();
        return parent::getProperties();
    }

    public function getProperty($id)
    {
        $this->__load();
        return parent::getProperty($id);
    }

    public function setProperties(\Doctrine\Common\Collections\ArrayCollection $properties)
    {
        $this->__load();
        return parent::setProperties($properties);
    }

    public function addProperty(\Fenchy\NoticeBundle\Entity\PropertyType $property)
    {
        $this->__load();
        return parent::addProperty($property);
    }

    public function removeProperty(\Fenchy\NoticeBundle\Entity\PropertyType $property)
    {
        $this->__load();
        return parent::removeProperty($property);
    }

    public function getLocationChangeAvailable()
    {
        $this->__load();
        return parent::getLocationChangeAvailable();
    }

    public function setLocationChangeAvailable($bool)
    {
        $this->__load();
        return parent::setLocationChangeAvailable($bool);
    }

    public function isLocationChangeAvailable()
    {
        $this->__load();
        return parent::isLocationChangeAvailable();
    }

    public function getRoot()
    {
        $this->__load();
        return parent::getRoot();
    }

    public function getSequence()
    {
        $this->__load();
        return parent::getSequence();
    }

    public function setSequence($sequence)
    {
        $this->__load();
        return parent::setSequence($sequence);
    }

    public function getNotices()
    {
        $this->__load();
        return parent::getNotices();
    }

    public function setNotices(\Doctrine\Common\Collections\ArrayCollection $notices)
    {
        $this->__load();
        return parent::setNotices($notices);
    }

    public function getParentPath()
    {
        $this->__load();
        return parent::getParentPath();
    }

    public function getRootTypeIdPath($currPath = array (
))
    {
        $this->__load();
        return parent::getRootTypeIdPath($currPath);
    }

    public function addChildren(\Fenchy\NoticeBundle\Entity\Type $children)
    {
        $this->__load();
        return parent::addChildren($children);
    }

    public function removeChildren(\Fenchy\NoticeBundle\Entity\Type $children)
    {
        $this->__load();
        return parent::removeChildren($children);
    }

    public function addPropertie(\Fenchy\NoticeBundle\Entity\PropertyType $properties)
    {
        $this->__load();
        return parent::addPropertie($properties);
    }

    public function removePropertie(\Fenchy\NoticeBundle\Entity\PropertyType $properties)
    {
        $this->__load();
        return parent::removePropertie($properties);
    }

    public function addNotice(\Fenchy\NoticeBundle\Entity\Notice $notices)
    {
        $this->__load();
        return parent::addNotice($notices);
    }

    public function removeNotice(\Fenchy\NoticeBundle\Entity\Notice $notices)
    {
        $this->__load();
        return parent::removeNotice($notices);
    }

    public function splitNoticesByMainProperty()
    {
        $this->__load();
        return parent::splitNoticesByMainProperty();
    }

    public function hasProperty($name)
    {
        $this->__load();
        return parent::hasProperty($name);
    }

    public function hasPropertyOfId($id)
    {
        $this->__load();
        return parent::hasPropertyOfId($id);
    }

    public function getSubcategoryId()
    {
        $this->__load();
        return parent::getSubcategoryId();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'sequence', 'locationChangeAvailable', 'parent', 'children', 'properties', 'notices');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}