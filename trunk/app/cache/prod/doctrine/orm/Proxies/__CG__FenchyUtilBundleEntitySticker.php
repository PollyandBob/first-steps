<?php

namespace Proxies\__CG__\Fenchy\UtilBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Sticker extends \Fenchy\UtilBundle\Entity\Sticker implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setDescription($desc)
    {
        $this->__load();
        return parent::setDescription($desc);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setUser(\Fenchy\UserBundle\Entity\User $user)
    {
        $this->__load();
        return parent::setUser($user);
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }

    public function setNotice(\Fenchy\NoticeBundle\Entity\Notice $notice)
    {
        $this->__load();
        return parent::setNotice($notice);
    }

    public function getNotice()
    {
        $this->__load();
        return parent::getNotice();
    }

    public function setReview(\Fenchy\NoticeBundle\Entity\Review $review)
    {
        $this->__load();
        return parent::setReview($review);
    }

    public function getReview()
    {
        $this->__load();
        return parent::getReview();
    }

    public function getCreatedAt()
    {
        $this->__load();
        return parent::getCreatedAt();
    }

    public function setCreatedAt($date)
    {
        $this->__load();
        return parent::setCreatedAt($date);
    }

    public function getReasonName($reason = NULL)
    {
        $this->__load();
        return parent::getReasonName($reason);
    }

    public function getReason()
    {
        $this->__load();
        return parent::getReason();
    }

    public function setReason($reasons)
    {
        $this->__load();
        return parent::setReason($reasons);
    }

    public function getReportedBy()
    {
        $this->__load();
        return parent::getReportedBy();
    }

    public function setReportedBy(\Fenchy\UserBundle\Entity\User $user)
    {
        $this->__load();
        return parent::setReportedBy($user);
    }

    public function getDiscardedAt()
    {
        $this->__load();
        return parent::getDiscardedAt();
    }

    public function setDiscardedAt(\DateTime $date)
    {
        $this->__load();
        return parent::setDiscardedAt($date);
    }

    public function getTargetId()
    {
        $this->__load();
        return parent::getTargetId();
    }

    public function getTarget()
    {
        $this->__load();
        return parent::getTarget();
    }

    public function discard()
    {
        $this->__load();
        return parent::discard();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'reason', 'description', 'created_at', 'discarded_at', 'user', 'notice', 'review', 'reported_by');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}