<?php

namespace Proxies\__CG__\Fenchy\UserBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class User extends \Fenchy\UserBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function getAskAgain()
    {
        $this->__load();
        return parent::getAskAgain();
    }

    public function setAskAgain($ask_again)
    {
        $this->__load();
        return parent::setAskAgain($ask_again);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function getMainImage()
    {
        $this->__load();
        return parent::getMainImage();
    }

    public function setTwitterID($twitterID)
    {
        $this->__load();
        return parent::setTwitterID($twitterID);
    }

    public function getTwitterID()
    {
        $this->__load();
        return parent::getTwitterID();
    }

    public function setTwitterUsername($twitterUsername)
    {
        $this->__load();
        return parent::setTwitterUsername($twitterUsername);
    }

    public function getTwitterUsername()
    {
        $this->__load();
        return parent::getTwitterUsername();
    }

    public function getRegularUser()
    {
        $this->__load();
        return parent::getRegularUser();
    }

    public function setRegularUser(\Fenchy\RegularUserBundle\Entity\UserRegular $ru)
    {
        $this->__load();
        return parent::setRegularUser($ru);
    }

    public function getNotificationGroupIntervals()
    {
        $this->__load();
        return parent::getNotificationGroupIntervals();
    }

    public function setNotificationGroupIntervals(\Doctrine\Common\Collections\ArrayCollection $intervals)
    {
        $this->__load();
        return parent::setNotificationGroupIntervals($intervals);
    }

    public function addNotificationGroupInterval(\Fenchy\UserBundle\Entity\NotificationGroupInterval $interval)
    {
        $this->__load();
        return parent::addNotificationGroupInterval($interval);
    }

    public function removeNotificationGroupInterval(\Fenchy\UserBundle\Entity\NotificationGroupInterval $interval)
    {
        $this->__load();
        return parent::removeNotificationGroupInterval($interval);
    }

    public function getNotifications()
    {
        $this->__load();
        return parent::getNotifications();
    }

    public function setNotifications(\Doctrine\Common\Collections\ArrayCollection $notifications)
    {
        $this->__load();
        return parent::setNotifications($notifications);
    }

    public function isRegular()
    {
        $this->__load();
        return parent::isRegular();
    }

    public function createRegular()
    {
        $this->__load();
        return parent::createRegular();
    }

    public function serialize()
    {
        $this->__load();
        return parent::serialize();
    }

    public function unserialize($data)
    {
        $this->__load();
        return parent::unserialize($data);
    }

    public function setFacebookId($facebookId)
    {
        $this->__load();
        return parent::setFacebookId($facebookId);
    }

    public function getFacebookId()
    {
        $this->__load();
        return parent::getFacebookId();
    }

    public function getUserRegular()
    {
        $this->__load();
        return parent::getUserRegular();
    }

    public function setUserRegular(\Fenchy\RegularUserBundle\Entity\UserRegular $ru)
    {
        $this->__load();
        return parent::setUserRegular($ru);
    }

    public function getNotices()
    {
        $this->__load();
        return parent::getNotices();
    }

    public function getNonDraftNoticesCount()
    {
        $this->__load();
        return parent::getNonDraftNoticesCount();
    }

    public function getInterestsAndActivities()
    {
        $this->__load();
        return parent::getInterestsAndActivities();
    }

    public function countPrevNoticesQuantity()
    {
        $this->__load();
        return parent::countPrevNoticesQuantity();
    }

    public function setNotices(\Doctrine\Common\Collections\ArrayCollection $notices)
    {
        $this->__load();
        return parent::setNotices($notices);
    }

    public function addNotice(\Fenchy\NoticeBundle\Entity\Notice $notice)
    {
        $this->__load();
        return parent::addNotice($notice);
    }

    public function removeNotice(\Fenchy\NoticeBundle\Entity\Notice $notice)
    {
        $this->__load();
        return parent::removeNotice($notice);
    }

    public function getPrevNoticesQuantity()
    {
        $this->__load();
        return parent::getPrevNoticesQuantity();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function addNotification(\Fenchy\UserBundle\Entity\Notification $notifications)
    {
        $this->__load();
        return parent::addNotification($notifications);
    }

    public function removeNotification(\Fenchy\UserBundle\Entity\Notification $notifications)
    {
        $this->__load();
        return parent::removeNotification($notifications);
    }

    public function setEnabled($boolean)
    {
        $this->__load();
        return parent::setEnabled($boolean);
    }

    public function getJustEnabled()
    {
        $this->__load();
        return parent::getJustEnabled();
    }

    public function setJustEnabled($justEnabled)
    {
        $this->__load();
        return parent::setJustEnabled($justEnabled);
    }

    public function setGallery(\Fenchy\GalleryBundle\Entity\Gallery $gallery)
    {
        $this->__load();
        return parent::setGallery($gallery);
    }

    public function getGallery()
    {
        $this->__load();
        return parent::getGallery();
    }

    public function getActivity()
    {
        $this->__load();
        return parent::getActivity();
    }

    public function setActivity($activity)
    {
        $this->__load();
        return parent::setActivity($activity);
    }

    public function addActivity($points)
    {
        $this->__load();
        return parent::addActivity($points);
    }

    public function setMessages(\Doctrine\Common\Collections\ArrayCollection $messages)
    {
        $this->__load();
        return parent::setMessages($messages);
    }

    public function getMessages()
    {
        $this->__load();
        return parent::getMessages();
    }

    public function addMessage($message)
    {
        $this->__load();
        return parent::addMessage($message);
    }

    public function removeMessage($message)
    {
        $this->__load();
        return parent::removeMessage($message);
    }

    public function getGotReferences()
    {
        $this->__load();
        return parent::getGotReferences();
    }

    public function setGotReferences(\Doctrine\Common\Collections\ArrayCollection $references)
    {
        $this->__load();
        return parent::setGotReferences($references);
    }

    public function addGotReference(\Fenchy\UserBundle\Entity\Reference $reference)
    {
        $this->__load();
        return parent::addGotReference($reference);
    }

    public function removeGotReference(\Fenchy\UserBundle\Entity\Reference $reference)
    {
        $this->__load();
        return parent::removeGotReference($reference);
    }

    public function getSentReferences()
    {
        $this->__load();
        return parent::getSentReferences();
    }

    public function setSentReferences(\Doctrine\Common\Collections\ArrayCollection $references)
    {
        $this->__load();
        return parent::setSentReferences($references);
    }

    public function addSentReference(\Fenchy\UserBundle\Entity\Reference $reference)
    {
        $this->__load();
        return parent::addSentReference($reference);
    }

    public function removeSentReference(\Fenchy\UserBundle\Entity\Reference $reference)
    {
        $this->__load();
        return parent::removeSentReference($reference);
    }

    public function enableReference()
    {
        $this->__load();
        return parent::enableReference();
    }

    public function referenceAccepted()
    {
        $this->__load();
        return parent::referenceAccepted();
    }

    public function setRegisteredWith($registeredWith)
    {
        $this->__load();
        return parent::setRegisteredWith($registeredWith);
    }

    public function getRegisteredWith()
    {
        $this->__load();
        return parent::getRegisteredWith();
    }

    public function setRegisteredWithId($registeredWithId)
    {
        $this->__load();
        return parent::setRegisteredWithId($registeredWithId);
    }

    public function getRegisteredWithId()
    {
        $this->__load();
        return parent::getRegisteredWithId();
    }

    public function setEmailChangeRequest(\Fenchy\UserBundle\Entity\EmailChangeRequest $emailChangeRequest = NULL)
    {
        $this->__load();
        return parent::setEmailChangeRequest($emailChangeRequest);
    }

    public function getEmailChangeRequest()
    {
        $this->__load();
        return parent::getEmailChangeRequest();
    }

    public function setLocation(\Fenchy\UtilBundle\Entity\Location $location)
    {
        $this->__load();
        return parent::setLocation($location);
    }

    public function getLocation()
    {
        $this->__load();
        return parent::getLocation();
    }

    public function hasRequiredLocation()
    {
        $this->__load();
        return parent::hasRequiredLocation();
    }

    public function getStickers()
    {
        $this->__load();
        return parent::getStickers();
    }

    public function setStickers(\Doctrine\Common\Collections\ArrayCollection $stickers)
    {
        $this->__load();
        return parent::setStickers($stickers);
    }

    public function addSticker(\Fenchy\UtilBundle\Entity\Sticker $sticker)
    {
        $this->__load();
        return parent::addSticker($sticker);
    }

    public function removeSticker(\Fenchy\UtilBundle\Entity\Sticker $sticker)
    {
        $this->__load();
        return parent::removeSticker($sticker);
    }

    public function setReportedStickers(\Doctrine\Common\Collections\ArrayCollection $stickers)
    {
        $this->__load();
        return parent::setReportedStickers($stickers);
    }

    public function addReportedSticker(\Fenchy\UtilBundle\Entity\Sticker $sticker)
    {
        $this->__load();
        return parent::addReportedSticker($sticker);
    }

    public function removeReportedSticker(\Fenchy\UtilBundle\Entity\Sticker $sticker)
    {
        $this->__load();
        return parent::removeReportedSticker($sticker);
    }

    public function getReportedStickers()
    {
        $this->__load();
        return parent::getReportedStickers();
    }

    public function setReviews(\Doctrine\Common\Collections\ArrayCollection $reviews)
    {
        $this->__load();
        return parent::setReviews($reviews);
    }

    public function addReview(\Fenchy\NoticeBundle\Entity\Review $review)
    {
        $this->__load();
        return parent::addReview($review);
    }

    public function removeReview(\Fenchy\NoticeBundle\Entity\Review $review)
    {
        $this->__load();
        return parent::removeReview($review);
    }

    public function getReviews($type = NULL)
    {
        $this->__load();
        return parent::getReviews($type);
    }

    public function setOwnReviews(\Doctrine\Common\Collections\ArrayCollection $reviews)
    {
        $this->__load();
        return parent::setOwnReviews($reviews);
    }

    public function addOwnReview(\Fenchy\NoticeBundle\Entity\Review $review)
    {
        $this->__load();
        return parent::addOwnReview($review);
    }

    public function removeOwnReview(\Fenchy\NoticeBundle\Entity\Review $review)
    {
        $this->__load();
        return parent::removeOwnReview($review);
    }

    public function getOwnReviews()
    {
        $this->__load();
        return parent::getOwnReviews();
    }

    public function getPrevReviewsQuantity()
    {
        $this->__load();
        return parent::getPrevReviewsQuantity();
    }

    public function getPrevOwnReviewsQuantity()
    {
        $this->__load();
        return parent::getPrevOwnReviewsQuantity();
    }

    public function getAllReviews()
    {
        $this->__load();
        return parent::getAllReviews();
    }

    public function toJsonArray()
    {
        $this->__load();
        return parent::toJsonArray();
    }

    public function getPrevFacebookId()
    {
        $this->__load();
        return parent::getPrevFacebookId();
    }

    public function getIsBusiness()
    {
        $this->__load();
        return parent::getIsBusiness();
    }

    public function setIsBusiness($isBusiness)
    {
        $this->__load();
        return parent::setIsBusiness($isBusiness);
    }

    public function setCreatedAt($createdAt)
    {
        $this->__load();
        return parent::setCreatedAt($createdAt);
    }

    public function getCreatedAt()
    {
        $this->__load();
        return parent::getCreatedAt();
    }

    public function addRole($role)
    {
        $this->__load();
        return parent::addRole($role);
    }

    public function eraseCredentials()
    {
        $this->__load();
        return parent::eraseCredentials();
    }

    public function getUsername()
    {
        $this->__load();
        return parent::getUsername();
    }

    public function getUsernameCanonical()
    {
        $this->__load();
        return parent::getUsernameCanonical();
    }

    public function getSalt()
    {
        $this->__load();
        return parent::getSalt();
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function getEmailCanonical()
    {
        $this->__load();
        return parent::getEmailCanonical();
    }

    public function getPassword()
    {
        $this->__load();
        return parent::getPassword();
    }

    public function getPlainPassword()
    {
        $this->__load();
        return parent::getPlainPassword();
    }

    public function getLastLogin()
    {
        $this->__load();
        return parent::getLastLogin();
    }

    public function getConfirmationToken()
    {
        $this->__load();
        return parent::getConfirmationToken();
    }

    public function getRoles()
    {
        $this->__load();
        return parent::getRoles();
    }

    public function hasRole($role)
    {
        $this->__load();
        return parent::hasRole($role);
    }

    public function isAccountNonExpired()
    {
        $this->__load();
        return parent::isAccountNonExpired();
    }

    public function isAccountNonLocked()
    {
        $this->__load();
        return parent::isAccountNonLocked();
    }

    public function isCredentialsNonExpired()
    {
        $this->__load();
        return parent::isCredentialsNonExpired();
    }

    public function isCredentialsExpired()
    {
        $this->__load();
        return parent::isCredentialsExpired();
    }

    public function isEnabled()
    {
        $this->__load();
        return parent::isEnabled();
    }

    public function isExpired()
    {
        $this->__load();
        return parent::isExpired();
    }

    public function isLocked()
    {
        $this->__load();
        return parent::isLocked();
    }

    public function isSuperAdmin()
    {
        $this->__load();
        return parent::isSuperAdmin();
    }

    public function isUser(\FOS\UserBundle\Model\UserInterface $user = NULL)
    {
        $this->__load();
        return parent::isUser($user);
    }

    public function removeRole($role)
    {
        $this->__load();
        return parent::removeRole($role);
    }

    public function setUsername($username)
    {
        $this->__load();
        return parent::setUsername($username);
    }

    public function setUsernameCanonical($usernameCanonical)
    {
        $this->__load();
        return parent::setUsernameCanonical($usernameCanonical);
    }

    public function setCredentialsExpireAt(\DateTime $date)
    {
        $this->__load();
        return parent::setCredentialsExpireAt($date);
    }

    public function setCredentialsExpired($boolean)
    {
        $this->__load();
        return parent::setCredentialsExpired($boolean);
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function setEmailCanonical($emailCanonical)
    {
        $this->__load();
        return parent::setEmailCanonical($emailCanonical);
    }

    public function setExpired($boolean)
    {
        $this->__load();
        return parent::setExpired($boolean);
    }

    public function setExpiresAt(\DateTime $date)
    {
        $this->__load();
        return parent::setExpiresAt($date);
    }

    public function setPassword($password)
    {
        $this->__load();
        return parent::setPassword($password);
    }

    public function setSuperAdmin($boolean)
    {
        $this->__load();
        return parent::setSuperAdmin($boolean);
    }

    public function setPlainPassword($password)
    {
        $this->__load();
        return parent::setPlainPassword($password);
    }

    public function setLastLogin(\DateTime $time)
    {
        $this->__load();
        return parent::setLastLogin($time);
    }

    public function setLocked($boolean)
    {
        $this->__load();
        return parent::setLocked($boolean);
    }

    public function setConfirmationToken($confirmationToken)
    {
        $this->__load();
        return parent::setConfirmationToken($confirmationToken);
    }

    public function setPasswordRequestedAt(\DateTime $date = NULL)
    {
        $this->__load();
        return parent::setPasswordRequestedAt($date);
    }

    public function getPasswordRequestedAt()
    {
        $this->__load();
        return parent::getPasswordRequestedAt();
    }

    public function isPasswordRequestNonExpired($ttl)
    {
        $this->__load();
        return parent::isPasswordRequestNonExpired($ttl);
    }

    public function setRoles(array $roles)
    {
        $this->__load();
        return parent::setRoles($roles);
    }

    public function getGroups()
    {
        $this->__load();
        return parent::getGroups();
    }

    public function getGroupNames()
    {
        $this->__load();
        return parent::getGroupNames();
    }

    public function hasGroup($name)
    {
        $this->__load();
        return parent::hasGroup($name);
    }

    public function addGroup(\FOS\UserBundle\Model\GroupInterface $group)
    {
        $this->__load();
        return parent::addGroup($group);
    }

    public function removeGroup(\FOS\UserBundle\Model\GroupInterface $group)
    {
        $this->__load();
        return parent::removeGroup($group);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'username', 'usernameCanonical', 'email', 'emailCanonical', 'enabled', 'salt', 'password', 'lastLogin', 'locked', 'expired', 'expiresAt', 'confirmationToken', 'passwordRequestedAt', 'roles', 'credentialsExpired', 'credentialsExpireAt', 'id', 'facebookId', 'twitterID', 'twitter_username', 'activity', 'ask_again', 'registeredWith', 'registeredWithId', 'isBusiness', 'created_at', 'user_regular', 'location', 'notification_group_intervals', 'notifications', 'notices', 'messages', 'gallery', 'got_references', 'sent_references', 'email_change_request', 'stickers', 'reported_stickers', 'reviews', 'ownReviews');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}